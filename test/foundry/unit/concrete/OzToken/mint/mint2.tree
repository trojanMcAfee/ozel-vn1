Mint_Unit_Concrete_test
└── when the underlying has 6 decimals
    ├── it should mint the proper amounts of ozTokens per underlying.
    ├── it shoud properly update all the updateReward variables.
    ├── when amountIn is zero
    │   └── it should revert when is zero.
    ├── when underlying is zero
    │   └── it should revert.
    ├── when underlying is an ozToken
    │   └── it should mint proper ozTokens
    └── when underlying is not an ozToken
        └── it should revert



# when 6 decimals underlying

underlying has to be a valid ozToken
can't be zero address - owner not receiver
it should revert when trying to reenter 

what happens if we call with amountIn uintMax ?


when 18 decimals underlying


Mint_Unit_Concrete_test
├── when the underlying has 6 decimals
│   ├── when amountIn is zero_6
│   │   └── it should revert.
│   ├── when underlying is zero_6
│   │   └── it should revert.
│   ├── when underlying is an ozToken_6
│   │   └── it should mint.
│   └── when underlying is not an ozToken_6
│       └── it should revert
└── when the underlying has 18 decimals
    ├── when amountIn is zero_18
    │   └── it should revert.
    ├── when underlying is zero_18
    │   └── it should revert.
    ├── when underlying is an ozToken_18
    │   └── it should mint.
    └── when underlying is not an ozToken_18
        └── it should revert




# when owner is zero
## it should revert_6dec
## it should revert_18dec
# when analysing mintData
## when analysing minAmountsOut
### when at least one element from minAmountsOut is zero
#### it should mint with slippage_6dec
#### it should mint with slippage_18dec
### when at least one element minAmountsOut is uint max
#### it should throw error_6dec
#### it should throw error_18dec
## when amountIn is zero
### it should revert_6dec
### it should revert_18dec
## when slippage is not enough
### it should throw error_6dec
### it should throw error_18dec
## when receiver is zero
### it should revert_6dec
### it should revert_18dec
## when mintData is not properly encoded
### it should throw error_6dec
### it should throw error_18dec
# when user has underlying balance
## it should mint_6dec
## it should mint_18dec
# when user doesn't have underlying balance
## it should throw error_6dec
## it should throw error_18dec




